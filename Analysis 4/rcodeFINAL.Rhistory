data <- read.csv('stat231datasets20892402.csv')
data <- read.csv('stat231datasets20892402.csv')
data <- read.csv('stat231datasets20892405.csv')
data <- read.csv('stat231dataset20892405.csv')
View(data)
data[data$hashtags.binary == 1]
data[hashtags.binary == 1]
data[hashtags.binary = 1]
data[hashtags.binary == 1]
data[data$hashtags.binary == 1]
data$hashtags.binary
data$hashtags.binary == 1
dataA <- subset(data, subset = (hashtags.binary == 1))
View(dataA)
dim(dataA)
dim(data)
dim(dataA)[1]
sampleA <- dim(dataA)[1]
n <- dim(data)[1]
thetahat <- sampleA/n
D <- abs(sampleA-n*0.14)/sqrt(n*(0.14)*(1-0.14))
n
n*0.14
sampleA
264- n*0.14
(264- n*0.14)/sqrt(n*(0.14)*(1-0.14))
pnorm(0)
pvalue <- 2*(1 - pnorm(D))
pnorm(D)
pnorm(D)
lambda <- (-2*log((0.14/thetahat)^(n*thetahat)*((1 - 0.14)/(1 - thetahat))^(n - n*thetahat)))
2*(1 - pnorm(sqrt(lambda)))
tgh.first <- data$tweet.gap.hour[data$first.tweet == 1 & data$tweet.gap.hour <= 24]
data$tweet.gap.hour <- data$tweet.gap/3600
tgh.first <- data$tweet.gap.hour[data$first.tweet == 1 & data$tweet.gap.hour <= 24]
tgh.first
tf1 <- sqrt(max(tgh.first) - tgh.first + 1)
tf1
mean_o <- sqrt(max(tgh.first) - 16 + 1)
mean_o
max(tgh.first)
24-16
length(tf1)
D_2 <- abs(mean(tf1)-mean_o)/(sd(tf1)/sqrt(length(tf1)))
2*(1-pt(D_2,291))
median(tf1)
sampleA
mean(tf1)
sd(tf1)
> 2*(1-pt(D_2,291))
> 2*(1-pt(D_2,291))
sampleA
> 2*(1-pt(D_2,291))
2*(1-pt(D_2,291))
data$likes.log <- log(data$likes + 1)
user$likes.log <- log(user$likes + 1)
user <- subset(data, subset = (username == "@theJagmeetSingh"))
user$likes.log <- log(user$likes + 1)
mod <- lm(likes.log ~ length, date = user)
user$likes.log <- log(user$likes + 1)
View(user)
mod <- lm(likes.log ~ length, data = user)
mod
coef(mod)
plot(user$length, user$likes.log)
plot(user$likes.log, user$length)
coef(mod)
summary(mod)
confint(mod, leve .95)
confint(mod, level= .95)
sigma(mod)
plot(user$length, user$likes.log, xlab = "Length of Tweet"
, ylab = "NUmber of Likes", main = "Length and Likes Of A Tweet",
pch = 3, cex = 0.75, col = "green")
plot(user$length, user$likes.log, xlab = "Length of Tweet"
, ylab = "NUmber of Likes", main = "Length and Likes Of A Tweet",
pch = 3, cex = 0.75, col = "green")
abline(coef(mod), lwd = 2, lty = 2, col = "red")
stdres <- rstandard(mod)
plot(user$length, stdres,
main = "Std residuals vs. Length of Tweets",
xlab = "Length Of Tweets", ylab = "Standardized Residuals",
pch = 1, col = "navy", cex = 0.5, las = 1)
abline(h = 0, lty = 2, col = "red", lwd = 2)
qqnorm(stdres, main = "qqplot of std residuals",
xlab = "G(0, 1) Quantiles", ylab = "Standardized Residuals",
pch = 1, col = "navy", cex = 0.5)
qqline(stdres, lty = 2, col = "red", lwd = 2)
qqnorm(stdres, main = "QQlpot of std residuals",
xlab = "G(0, 1) Quantiles", ylab = "Standardized Residuals",
pch = 1, col = "navy", cex = 0.5)
qqline(stdres, lty = 2, col = "red", lwd = 2)
qqnorm(stdres, main = "QQplot of std residuals",
xlab = "G(0, 1) Quantiles", ylab = "Standardized Residuals",
pch = 1, col = "navy", cex = 0.5)
qqline(stdres, lty = 2, col = "red", lwd = 2)
predict(mod, newdata = user.frame("length" = log(10 + 1)))
predict(mod, newdata = data.frame("length" = log(10 + 1)))
predict(mod, newdata = data.frame("length" = log(200 + 1)))
coef(mod)[1] + coef(mod)[2]*log(200 + 1)
predict(mod, newdata = data.frame("length" = log(200 + 1)), interval= "prediction", level = 0.95)
predict(mod, newdata = data.frame("length" = log(200 + 1)), interval= "preddiction", level = 0.95)
sum(is.na(mydata[, 1:24]))
sum(is.na(data[, 1:24]))
pvalue <- 2*(1 - pnorm(D))
pvalue
sampleA
n*0.14
sqrt(n*(0.14)*(1-0.14))
D
thetahat
dim(data)
n
View(data)
sum(data$hashtags.binary)
1133*0.23*(1-0.23)
sqrt(200)
23-14
dataA <- subset(data, subset = (hashtags.binary == 1))
2*(1-pt(D_2,1132))
mean(tf1)
2*(1-pt(D_2,1132))
predict(mod, newdata = data.frame("length" = 200))
predict(mod, newdata = data.frame("length" = log(200 + 1)), interval= "prediction", level = 0.95)
predict(mod, newdata = data.frame("length" = 200), interval= "prediction", level = 0.95)
S_xx <- sum((@theJagmeetSingh$length)-mean(@theJagmeetSingh$length)^2)
S_xx <- sum((user$length)-mean(user$length)^2)
S_xx
S_xx <- sum((user$likes.log)-mean(user$likes.log)^2)
S_xx <- sum((user$length)-mean(user$length)^2)
S_xx <- sum((user$length-mean(user$length))^2)
S_xx
cor(user$length, user$likes.log)
mod
S_yy <- sum((user$likes.log-mean(user$likes.log))^2)
S_xy <- sum((user$likes.log-mean(user$likes.log))*(user$length-mean(user$length)))
S_xy/sqrt(S_xx*S_yy)
dim(user)
s_e <-(1/223)*(S_yy -(-0.007017032)*S_xx)
s_e <- sqrt((1/223)*(S_yy -(-0.007017032)*S_xx))
s_e
p-value_user <- abs(-0.007017032 - 0)/(s_e/sqrt(S_xx))
p_value_user <- abs(-0.007017032 - 0)/(s_e/sqrt(S_xx))
p_value_user
s_e <- sqrt((1/223)*(S_yy -(-0.007017032)*S_xx))
coef(mod)[2]
s_e
dim(user)
s_e <- sqrt((1/223)*(S_yy -(-0.007017032)*S_xy))
p_value_user <- abs(-0.007017032 - 0)/(s_e/sqrt(S_xx))
p_value_user
s_e
abs(coef(mod)[2] - 0)/(s_e/sqrt(S_xx))
p_value_user
usertest <- p_value_user
2*(1-pt(usertest, 223))
sqrt((1/(225 - 2))(S_yy-coef(mod)[2]*S_xy)
sqrt((1/(225 - 2))*(S_yy-coef(mod)[2]*S_xy)
sqrt((1/(225 - 2))*(S_yy-coef(mod)[2]*S_xy)
sqrt((1/(225 - 2))*(S_yy-coef(mod)[2]*S_xy))
sqrt((1/(225 - 2)*(S_yy-coef(mod)[2]*S_xy)))
2*(1-pt(sqrt((1/(225 - 2)*(S_yy-coef(mod)[2]*S_xy))), 223))
usertest
S_yy <- sum((user$likes.log-mean(user$likes.log))^2)
S_xy <- sum((user$likes.log-mean(user$likes.log))*(user$length-mean(user$length)))
S_xx <- sum((user$length-mean(user$length))^2)
s_e <- sqrt((1/223)*(S_yy -(-0.007017032)*S_xy))
usertest <- abs(-0.007017032 - 0)/(s_e/sqrt(S_xx))
usertest <- abs(coef(mod)[2] - 0)/(S_e/sqrt(S_xx))
usertest <- abs(coef(mod)[2] - 0)/(s_e/sqrt(S_xx))
usertest
2*(1-pt(usertest, 223))
user$length.long <- as.numeric(user$length >= median(user$length))
user$length.short <- as.numeric(user$length < median(user$length))
user$length.long
t.test(user$length, user$likes.log, var.equal = TRUE)$p.value
user$length >= median(user$length)
user[user$length >= median(user$length)]
users$length[user$length >= median(user$length)]
user$length[user$length >= median(user$length)]
user$length.long <- user$length[user$length >= median(user$length)]
user$length.short <- user$length[user$length < median(user$length)]
user$length.long <- users$length[user$length >= median(user$length)]
user$length.long <- user$length[user$length >= median(user$length)]
length.long <- user$length[user$length >= median(user$length)]
length.short <- user$length[user$length < median(user$length)]
t.test(length.long, length.short, var.equal = FALSE)
t.test(length.short, length.long, var.equal = FALSE)
t.test(length.short, length.long, var.equal = FALSE)
t.test(length.long, length.short, var.equal = FALSE)
t.test(length.short, length.long, var.equal = FALSE)
likes.long <- user$likes.log[user$length >= median(user$length)]
likes.short <- user$likes.log[user$length >= median(user$length)]
likes.long
t.test(likes.short, likes.long, var.equal = FALSE)
likes.short <- user$likes.log[user$length < median(user$length)]
t.test(likes.short, likes.long, var.equal = FALSE)
mean(likes.short)
mean(likes.long)
sd(likes.short)
sd(likes.long)
length(likes.long)
length(likes.short)
summary(likes.long)
summary(likes.short)
savehistory("~/TERM 2B/STAT 231/A4/rcodeFINAL.Rhistory")
